import cv2

# initialize camera and video output
cap = cv2.VideoCapture(0)
out = cv2.VideoWriter('output.avi',cv2.VideoWriter_fourcc('M','J','P','G'), 10, (640,480))

# initialize lane detection parameters
lower_threshold = 50
upper_threshold = 150

while True:
    # Capture frame-by-frame
    ret, frame = cap.read()
    
    # Convert to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    
    # Apply Gaussian blur to reduce noise
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    
    # Apply Canny edge detection
    edges = cv2.Canny(blurred, lower_threshold, upper_threshold)
    
    # Apply Hough transform to detect lines
    lines = cv2.HoughLinesP(edges, 1, cv2.cv2.PI/180, threshold=50, minLineLength=50, maxLineGap=10)

    # Draw detected lines on original image
    for line in lines:
        x1, y1, x2, y2 = line[0]
        cv2.line(frame, (x1, y1), (x2, y2), (0, 255, 0), 3)
    
    # Display video output
    cv2.imshow('frame',frame)
    out.write(frame)
    
    # Exit loop if 'q' key is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release resources
cap.release()
out.release()
cv2.destroyAllWindows()
